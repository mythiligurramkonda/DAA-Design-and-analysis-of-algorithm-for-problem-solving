def wordBreak(s, wordDict):
    # Convert wordDict to a set for fast lookups
    word_set = set(wordDict)
    
    # Initialize the DP array with False values
    dp = [False] * (len(s) + 1)
    dp[0] = True  # Base case: An empty string can always be segmented

    # Iterate over each position in the string
    for i in range(1, len(s) + 1):
        # Check all possible substrings ending at position i
        for j in range(i):
            # If s[j:i] is in the dictionary and s[0:j] can be segmented
            if dp[j] and s[j:i] in word_set:
                dp[i] = True
                break  # No need to check further substrings ending at i
    
    # Return "Yes" if the entire string can be segmented, otherwise "No"
    return "Yes" if dp[len(s)] else "No"

# Example usage
s1 = "ilike"
wordDict1 = {"i", "like", "sam", "sung", "samsung", "mobile", "ice", "cream", "icecream", "man", "go", "mango"}
print(wordBreak(s1, wordDict1))  # Output: "Yes"

s2 = "ilikesamsung"
wordDict2 = {"i", "like", "sam", "sung", "samsung", "mobile", "ice", "cream", "icecream", "man", "go", "mango"}
print(wordBreak(s2, wordDict2))  # Output: "Yes"
