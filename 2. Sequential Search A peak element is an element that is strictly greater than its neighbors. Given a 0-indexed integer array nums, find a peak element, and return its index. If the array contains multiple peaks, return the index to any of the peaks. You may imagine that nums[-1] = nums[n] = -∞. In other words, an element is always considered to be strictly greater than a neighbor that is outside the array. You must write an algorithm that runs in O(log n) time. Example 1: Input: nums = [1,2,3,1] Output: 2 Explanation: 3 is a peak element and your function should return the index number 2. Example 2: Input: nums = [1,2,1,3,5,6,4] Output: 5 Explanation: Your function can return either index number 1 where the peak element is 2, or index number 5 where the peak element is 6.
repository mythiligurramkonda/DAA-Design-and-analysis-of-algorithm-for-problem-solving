def findPeakElement(nums):
    def binarySearch(left, right):
        if left == right:
            return left
        
        mid = (left + right) // 2
        
        # Check if mid is a peak
        if (mid == 0 or nums[mid] > nums[mid - 1]) and (mid == len(nums) - 1 or nums[mid] > nums[mid + 1]):
            return mid
        
        # If the left neighbor is greater, then the peak must be on the left side
        if mid > 0 and nums[mid] < nums[mid - 1]:
            return binarySearch(left, mid - 1)
        
        # If the right neighbor is greater, then the peak must be on the right side
        return binarySearch(mid + 1, right)
    
    return binarySearch(0, len(nums) - 1)

# Example usage
nums1 = [1, 2, 3, 1]
print(findPeakElement(nums1))  # Output: 2 (3 is a peak element)

nums2 = [1, 2, 1, 3, 5, 6, 4]
print(findPeakElement(nums2))  # Output: 5 (6 is a peak element)
