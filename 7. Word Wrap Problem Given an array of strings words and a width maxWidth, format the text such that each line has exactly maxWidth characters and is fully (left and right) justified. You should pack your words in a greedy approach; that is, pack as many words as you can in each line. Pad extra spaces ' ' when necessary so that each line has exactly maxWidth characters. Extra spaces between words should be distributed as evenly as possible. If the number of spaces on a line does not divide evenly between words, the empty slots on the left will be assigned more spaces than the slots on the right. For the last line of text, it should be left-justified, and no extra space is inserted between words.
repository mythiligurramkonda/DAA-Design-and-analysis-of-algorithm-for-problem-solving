def fullJustify(words, maxWidth):
    res = []
    current_line = []
    num_of_letters = 0

    for word in words:
        # Check if adding this word exceeds maxWidth
        if num_of_letters + len(word) + len(current_line) > maxWidth:
            # Time to justify the current line
            for i in range(maxWidth - num_of_letters):
                # Distribute spaces between words as evenly as possible
                current_line[i % (len(current_line) - 1 or 1)] += ' '
            res.append(''.join(current_line))
            # Reset for the next line
            current_line, num_of_letters = [], 0

        current_line.append(word)
        num_of_letters += len(word)

    # Last line - left-justified
    return res + [' '.join(current_line).ljust(maxWidth)]

# Example usage
words1 = ["This", "is", "an", "example", "of", "text", "justification."]
maxWidth1 = 16
print(fullJustify(words1, maxWidth1))
# Output:
# [
#   "This    is    an",
#   "example  of text",
#   "justification.  "
# ]

words2 = ["What","must","be","acknowledgment","shall","be"]
maxWidth2 = 16
print(fullJustify(words2, maxWidth2))
# Output:
# [
#   "What   must   be",
#   "acknowledgment ",
#   "shall be        "
# ]
