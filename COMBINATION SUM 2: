def combination_sum2(candidates, target):
    def backtrack(start, target, path):
        if target == 0:
            result.append(path)
            return
        if target < 0:
            return
        
        for i in range(start, len(candidates)):
            if i > start and candidates[i] == candidates[i - 1]:
                continue  # Skip duplicates
            num = candidates[i]
            backtrack(i + 1, target - num, path + [num])

    candidates.sort()  # Sort to facilitate duplicate skipping
    result = []
    backtrack(0, target, [])
    return result

# Example Test Cases
candidates1 = [10, 1, 2, 7, 6, 1, 5]
target1 = 8
print("Output for Example 1:", combination_sum2(candidates1, target1))

candidates2 = [2, 5, 2, 1, 2]
target2 = 5
print("Output for Example 2:", combination_sum2(candidates2, target2))
