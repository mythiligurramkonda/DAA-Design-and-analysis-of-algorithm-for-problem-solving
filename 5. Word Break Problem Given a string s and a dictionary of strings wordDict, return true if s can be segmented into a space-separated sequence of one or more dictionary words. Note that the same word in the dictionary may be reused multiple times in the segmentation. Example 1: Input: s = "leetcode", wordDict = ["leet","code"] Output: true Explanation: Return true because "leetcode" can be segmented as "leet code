def wordBreak(s, wordDict):
    # Convert wordDict to a set for faster lookup
    word_set = set(wordDict)
    
    # Initialize the DP array with False values
    dp = [False] * (len(s) + 1)
    dp[0] = True  # Base case: Empty string can always be segmented

    # Iterate over each position in the string
    for i in range(1, len(s) + 1):
        # Check all possible substrings ending at position i
        for j in range(i):
            # If s[j:i] is in the dictionary and s[0:j] can be segmented
            if dp[j] and s[j:i] in word_set:
                dp[i] = True
                break  # No need to check further substrings ending at i
    
    return dp[len(s)]

# Example usage
s1 = "leetcode"
wordDict1 = ["leet", "code"]
print(wordBreak(s1, wordDict1))  # Output: True

s2 = "applepenapple"
wordDict2 = ["apple", "pen"]
print(wordBreak(s2, wordDict2))  # Output: True

s3 = "catsandog"
wordDict3 = ["cats", "dog", "sand", "and", "cat"]
print(wordBreak(s3, wordDict3))  # Output: False
