class MergeSortCounter:
    def __init__(self):
        self.comparisons = 0
    def merge_sort(self, arr):
        if len(arr) <= 1:
            return arr
        mid = len(arr) // 2
        left_half = self.merge_sort(arr[:mid])
        right_half = self.merge_sort(arr[mid:])
        return self.merge(left_half, right_half)
    def merge(self, left, right):
        sorted_list = []
        i = j = 0
        while i < len(left) and j < len(right):
            self.comparisons += 1
            if left[i] < right[j]:
                sorted_list.append(left[i])
                i += 1
            else:
                sorted_list.append(right[j])
                j += 
        sorted_list.extend(left[i:])
        sorted_list.extend(right[j:])
        return sorted_list
sorter = MergeSortCounter()
test_cases = [
    ([12, 4, 78, 23, 45, 67, 89, 1], "Test Case 1"),
    ([38, 27, 43, 3, 9, 82, 10], "Test Case 2")
]
for arr, description in test_cases:
    sorter.comparisons = 0
    sorted_array = sorter.merge_sort(arr)
    print(f"{description}: Sorted Array = {', '.join(map(str, sorted_array))}, Comparisons = {sorter.comparisons}")
