def combination_sum(candidates, target):
    def backtrack(start, target, path):
        if target == 0:
            result.append(path)
            return
        if target < 0:
            return
        
        for i in range(start, len(candidates)):
            num = candidates[i]
            # Include the number and continue searching with reduced target
            backtrack(i, target - num, path + [num])

    result = []
    backtrack(0, target, [])
    return result

# Example Test Cases
candidates1 = [2, 3, 6, 7]
target1 = 7
print("Output for Example 1:", combination_sum(candidates1, target1))

candidates2 = [2, 3, 5]
target2 = 8
print("Output for Example 2:", combination_sum(candidates2, target2))

candidates3 = [2]
target3 = 1
print("Output for Example 3:", combination_sum(candidates3, target3))
